

//--------------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------------
//Å@çcèóîwåi
task SetBackGroundEffect_04(ID){
	let id			= [
		ObjPrim_Create(OBJ_SPRITE_2D),
		ObjPrim_Create(OBJ_SPRITE_2D),
		ObjPrim_Create(OBJ_SPRITE_2D),
	];
	let alpha1		= 0;
	let alphaA		= 0;
	let alpha2		= 0;
	let alphaB		= 0;
	let cc			= 0;
	let i			= 0;
	
	ObjPrim_SetTexture(id[0], spell_tex[11] );
	ObjPrim_SetTexture(id[1], spell_tex[12] );
	ObjPrim_SetTexture(id[2], spell_tex[13] );
	ObjRender_SetBlendType(id[0], BLEND_ALPHA );
	ObjRender_SetBlendType(id[1], BLEND_ALPHA );
	ObjRender_SetBlendType(id[2], BLEND_MULTIPLY );
	
	loop( length(id) ){
		ObjRender_SetPosition(id[i], CenX, CenY, 0 );
		Obj_SetRenderPriorityI(id[i], 29 );
		ObjRender_SetScaleXYZ(id[i], 1, 1, 0 );
		ObjPrim_SetVertexCount(id[i], 4 );
		ObjPrim_SetVertexPosition(id[i], 0, 384/-2, 448/-2, 0 );
		ObjPrim_SetVertexPosition(id[i], 1, 384/-2, 448/2, 0 );
		ObjPrim_SetVertexPosition(id[i], 2, 384/2, 448/-2, 0 );
		ObjPrim_SetVertexPosition(id[i], 3, 384/2, 448/2, 0 );
		ObjPrim_SetVertexUVT(id[i], 0, 0, 0 );
		ObjPrim_SetVertexUVT(id[i], 1, 0, 448 );
		ObjPrim_SetVertexUVT(id[i], 2, 384, 0 );
		ObjPrim_SetVertexUVT(id[i], 3, 384, 448 );
		i++;
	}
	i = 0;
	
	while( !Obj_IsDeleted(ID) ){
		
		alpha1 = 1 * sin( alphaA );
		alpha2 = 1 * sin( alphaB );
		
		let val = 48 * sin( cc/4 );
		
		ObjPrim_SetVertexUVT(id[1], 0, 0 + cc/4, 0 + cc/6 );
		ObjPrim_SetVertexUVT(id[1], 1, 0 + cc/4, 448 + cc/6 );
		ObjPrim_SetVertexUVT(id[1], 2, 384 + cc/4, 0 + cc/6 );
		ObjPrim_SetVertexUVT(id[1], 3, 384 + cc/4, 448 + cc/6 );
		
		ObjPrim_SetVertexUVT(id[2], 0, 0, 0 - cc/4 );
		ObjPrim_SetVertexUVT(id[2], 1, 0, 448 - cc/4 );
		ObjPrim_SetVertexUVT(id[2], 2, 384, 0 - cc/4 );
		ObjPrim_SetVertexUVT(id[2], 3, 384, 448 - cc/4 );
		
		ascent( i in 0..( length(id) ) ){
			ObjPrim_SetVertexAlpha(id[0], i, alpha1*255 );
			ObjPrim_SetVertexAlpha(id[1], i, alpha1*255 );
			ObjPrim_SetVertexAlpha(id[2], i, alpha1*255 );
		}
		i = 0;
		
		let hc = [
			[ 160, 160, 160 ],
			[ 255, 255, 255 ],
			[ 96, 64+32*sin(cc/4), 64+32*sin(cc/4) ],
		];
		
		loop( ( length(id) ) ){
			ObjPrim_SetVertexColor(id[i], 0, hc[i][0], hc[i][1], hc[i][2] );
			ObjPrim_SetVertexColor(id[i], 1, hc[i][0], hc[i][1], hc[i][2] );
			ObjPrim_SetVertexColor(id[i], 2, hc[i][0], hc[i][1], hc[i][2] );
			ObjPrim_SetVertexColor(id[i], 3, hc[i][0], hc[i][1], hc[i][2] );
			i++;
		}
		i = 0;
		
		cc++;
		if( alpha1 < 1 ){ alphaA += 2; }
		if( alpha2 < 1 && alpha1 >= 0.5 ){ alphaB += 5; }
		
		yield;
	}
	loop( length(id) ){
		Obj_Delete(id[i]);
		i++;
	}
	i = 0;
}
