function Road05(){
	let enm_num = GetEnemyIntersectionPosition(CenX, CenY, 512 );
	let plural;
	let midboss_flg = false;
	let compile_file_h = [ 0, 0 ];
	
	plural		= [csd ~ "./enm/Plural_stage05A.dnh",
					csd ~ "./enm/Plural_stage05B.dnh"];
	
	//　中ボスロード開始
	compile_file_h[0]	= LoadScriptInThread(plural[0]);
	LoadBossScript(compile_file_h[0]);
	
	
	//　nフレーム待機
	function FrameWait( n ){
		loop( n ){ yield };
	}
	//　自機ボム終了まで待機
	function WaitForSpell(){
		while( IsPlayerSpellActive() ){ yield; }
	}
	//　敵の数が 0 になるまで待機
	function WaitForZeroEnemy(){
		let AllEnemy	= GetAllEnemyID();
		let AllBoss		= GetEnemyBossObjectID();
		let AllScene	= GetEnemyBossSceneObjectID();
		while( length(AllEnemy) > 0 || length(enm_num) != 0 || length(AllBoss)!=0 || AllScene!=ID_INVALID ){
			AllEnemy	= GetAllEnemyID();
			AllBoss		= GetEnemyBossObjectID();
			AllScene	= GetEnemyBossSceneObjectID();
			yield;
		}
	}
	//　すべての敵を削除
	function VanishAllEnemy(){
		let AllEnemy	= GetAllEnemyID();
		let i			= 0;
		while(i<length(AllEnemy)){
			Obj_Delete(AllEnemy[i]);
			i++;
		}
	}
	
	//　テスト用敵でーたー
	/*
	local{
		E_Pattern_Road05_7( 8, 1 );
		while( 1 ){ yield; }
	}
	//*/

	task E_Pattern_Road05_1( lp, bx, by, v ){
		let pos = [ bx, by ];
		let epos = [ CenX, MinY - 256 ];
		if( by < CenY ){ epos = [ CenX, MaxY + 256 ]; }
		loop( lp ){
			let posx = pos[0] + v * cos( frame * 9 );
			let posy = pos[1] + v / 2 * sin( frame * 4 );
			CreateEnemy_Road05_1( [ posx, posy ], epos );
			loop( 11 ){ yield; }
		}
	}

	task E_Pattern_Road05_2( lp, wide, bx, by, r ){
		let sx = bx - wide / 2 * r;
		loop( lp ){
			let sy = by + 24 * cos( frame * 17 );
			let pos = [ sx, sy ];
			CreateEnemy_Road05_2( pos );
			sx += wide / ( lp - 1 ) * r;
			loop( 12 ){ yield; }
		}
	}

	task E_Pattern_Road05_3( lp, type ){
		let pos_s = [ MinX-64,CenY ];
		let v = 9;
		alternative( type%4 )
		case( 1 ){ pos_s = [ MaxX+64,CenY ]; }
		case( 2 ){ pos_s = [ MinX-64,CenY+64 ]; }
		case( 3 ){ pos_s = [ MaxX+64,CenY+64 ]; }
		
		loop( 2 ){
			loop( lp ){
				let pos_e = [MaxX+128+128*cos(frame*v),MinY-256];
				alternative( type % 4 )
				case( 1 ){ pos_e = [MinX-128-128*cos(frame*v),MinY-256]; }
				case( 2 ){ pos_e = [MaxX+256,MinY+128+64*cos(frame*v)]; }
				case( 3 ){ pos_e = [MinX-256,MinY+128+64*cos(frame*v)]; }
				CreateEnemy_Road05_3( pos_s, pos_e );
				loop( 7 ){ yield; }
			}
			loop( 15 ){ yield; }
		}
	}
	task E_Pattern_Road05_7( lp, type ){
		let v = 32;
		let pos_e = [ CenX, MinY - 256 ];
		loop( lp ){
			let pos_s = [ MaxX + 64, CenY ];
			let pos_m = [ MaxX - 72 + v * cos( frame * 29 ), CenY - 24 + v * cos( frame * 17 ) ];
			alternative( type % 2 )
			case( 1 ){
				pos_s = [ MinX - 64, CenY ];
				pos_m = [ MinX + 72 + v * cos( frame * 29 ), CenY - 24 + v * cos( frame * 17 ) ];
			}
			CreateEnemy_Road05_7( pos_s, pos_m, pos_e );
			loop( 15 ){ yield; }
		}
	}
	
	Stage05_WorldManager();
	
	FrameWait(60);

	
	//　引数2に情報セット　ｲﾍﾞﾝﾄ側でその情報を取り出す
	//　[ テクスチャ番号(0~2), 画像rect番号 ]
	NotifyEventAll( EV_USER + 2, [ 1, 2 ] );
	
	//------------PhaseA----------------
	DeleteMusic();
	PlayMusic( 9, true, 0 );
	
	FrameWait( 20 );
	
	E_Pattern_Road05_1( 8, CenX + 130, MaxY - 72, 48 );

	FrameWait( 24 );

	E_Pattern_Road05_1( 8, CenX - 130, MaxY - 72, 48 );
	
	FrameWait( 60 );

	E_Pattern_Road05_2( 6, 240, CenX, MinY + 100, 1 );
	
	FrameWait( 140 );
	E_Pattern_Road05_2( 7, 280, CenX, MinY + 160, -1 );

	FrameWait( 300 );
	
	StageTitleDisplay(180, csd ~ "./img/stg/stg5img/stg_t05a.png", [128,64,32] );
	
	FrameWait( 300 );

	E_Pattern_Road05_3( 14, 3 );
	FrameWait( 60 );
	E_Pattern_Road05_3( 14, 1 );

	FrameWait( 90 );

	CreateEnemy_Road05_4( [ MinX, MinY-64 ], [ MinX+64, CenY-128 ], [ MaxX+256, CenY-96 ] );

	FrameWait( 220 );

	E_Pattern_Road05_1( 8, CenX + 130, MinY + 72, 60 );

	FrameWait( 90 );

	E_Pattern_Road05_2( 3, 240, CenX, MaxY - 80, -1 );
	
	FrameWait( 180 );

	E_Pattern_Road05_2( 8, 280, CenX, MinY + 90, 1 );

	FrameWait( 90 );

	CreateEnemy_Road05_6( [ MaxX+64, MinY+64 ], [ MaxX-64, MinY+128 ], [ CenX, MinY-256 ] );
	
	FrameWait( 180 );
	
	CreateEnemy_Road05_6( [ MinX-64, MinY+64 ], [ MinX+64, MinY+128 ], [ CenX, MinY-256 ] );	

	FrameWait( 140 );

	E_Pattern_Road05_3( 10, 0 );
	E_Pattern_Road05_3( 10, 1 );

	FrameWait( 160 );

	CreateEnemy_Road05_5( [ CenX + 140, MinY + 140 ] );
	CreateEnemy_Road05_5( [ CenX - 140, MinY + 140 ] );

	FrameWait( 100 );
	
	CreateEnemy_Road05_5( [ CenX + 60, MinY + 100 ] );
	CreateEnemy_Road05_5( [ CenX - 60, MinY + 100 ] );

	FrameWait( 100 );

	local{
		let by = CenY - 200;
		let lp = 7;
		loop( lp ){
			CreateEnemy_Road05_5( [ CenX + 150, by ] );
			by += 400 / ( lp - 1 );
			FrameWait( 6 );
		}
	}

	FrameWait( 90 );
	
	local{
		let by = CenY + 200;
		let lp = 7;
		loop( lp ){
			CreateEnemy_Road05_5( [ CenX - 150, by ] );
			by -= 400 / ( lp - 1 );
			FrameWait( 6 );
		}
	}

	FrameWait( 200 );
	
	E_Pattern_Road05_1( 9, CenX - 130, MinY + 72, 72 );

	FrameWait( 210 );

	E_Pattern_Road05_3( 8, 2 );
	E_Pattern_Road05_3( 8, 3 );

	FrameWait( 120 );

	local{
		let bx = CenX;
		let by = CenY - 200;
		let lp = 5;
		loop( lp ){
			CreateEnemy_Road05_5( [ bx, by ] );
			bx -= 160 / ( lp - 1 );
			by += 160 / ( lp - 1 );
			FrameWait( 9 );
		}
	}
	FrameWait( 90 );
	local{
		let bx = CenX;
		let by = CenY + 200;
		let lp = 5;
		loop( lp ){
			CreateEnemy_Road05_5( [ bx, by ] );
			bx += 160 / ( lp - 1 );
			by -= 160 / ( lp - 1 );
			FrameWait( 9 );
		}
	}
	FrameWait( 90 );
	local{
		let bx = CenX + 160;
		let by = CenY - 40;
		let lp = 5;
		loop( lp ){
			CreateEnemy_Road05_5( [ bx, by ] );
			bx -= 160 / ( lp - 1 );
			by -= 160 / ( lp - 1 );
			FrameWait( 6 );
		}
	}
	FrameWait( 60 );
	local{
		let bx = CenX - 160;
		let by = CenY + 40;
		let lp = 5;
		loop( lp ){
			CreateEnemy_Road05_5( [ bx, by ] );
			bx += 160 / ( lp - 1 );
			by += 160 / ( lp - 1 );
			FrameWait( 6 );
		}
	}
	FrameWait( 240 );
	E_Pattern_Road05_2( 6, 260, CenX, MinY + 50, -1 );
	FrameWait( 120 );
	CreateEnemy_Road05_6( [ MinX-64, MinY+64 ], [ MinX+64, MinY+128 ], [ CenX, MinY-256 ] );	
	E_Pattern_Road05_2( 3, 160, CenX, MinY + 110, 1 );
	FrameWait( 120 );
	E_Pattern_Road05_2( 4, 200, CenX, MinY + 170, -1 );
	FrameWait( 120 );
	CreateEnemy_Road05_6( [ MaxX+64, MinY+64 ], [ MaxX-64, MinY+128 ], [ CenX, MinY-256 ] );	
	E_Pattern_Road05_2( 6, 300, CenX, MinY + 230, 1 );
	FrameWait( 580 );
	
	//　中ボス
	VanishAllEnemy();
	WaitForSpell();
	DeleteShotAll(TYPE_ALL, TYPE_ITEM);
	FrameWait(60);
	RegistBoss();
	midboss_flg = true;
	IsBossDeleted;
	task IsBossDeleted{
		FrameWait( 120 );
		WaitForZeroEnemy();
		ActiveArray_Change02( 0, false );
		FrameWait( 120 );
		//　次ボスロード開始
		compile_file_h[1]	= LoadScriptInThread(plural[1]);
		LoadBossScript(compile_file_h[1]);
		
		midboss_flg = false;
	}
	
	//3000
	FrameWait( 1200 );
	//*/
	//1800
	if( !midboss_flg ){
		let wide = 240;
		let bx = CenX - wide / 2;
		let by = MinY + 128;
		let lp = 6;
		let vy = 30;
		loop( lp ){
			by += 18 * cos( vy );
			CreateEnemy_Road05_5( [ bx, by ] );
			bx += wide / ( lp - 1 );
			vy += 112;
		}
	}
	FrameWait( 120 );
	//1680
	if( !midboss_flg ){
		let wide = 260;
		let bx = CenX - wide / 2;
		let by = MinY + 88;
		let lp = 7;
		let vy = 30;
		loop( lp ){
			by += 18 * cos( vy );
			CreateEnemy_Road05_5( [ bx, by ] );
			bx += wide / ( lp - 1 );
			vy += 124;
		}
	}
	FrameWait( 120 );
	//1540
	if( !midboss_flg ){
		let wide = 300;
		let bx = CenX - wide / 2;
		let by = MinY + 48;
		let lp = 8;
		let vy = 30;
		loop( lp ){
			by += 18 * cos( vy );
			CreateEnemy_Road05_5( [ bx, by ] );
			bx += wide / ( lp - 1 );
			vy += 214;
		}
	}
	FrameWait( 300 );
	//1240
	if( !midboss_flg ){
		E_Pattern_Road05_1( 12, CenX, CenY - 30, 120 );
	}
	FrameWait( 90 );
	//1150
	if( !midboss_flg ){
		E_Pattern_Road05_1( 12, CenX, CenY + 30, 120 );
	}

	FrameWait( 250 );
	//900
	if( !midboss_flg ){
		E_Pattern_Road05_1( 4, CenX + 80, CenY + 30, 60 );
		E_Pattern_Road05_1( 4, CenX - 80, CenY + 30, 60 );
	}
	FrameWait( 100 );
	//800
	if( !midboss_flg ){
		E_Pattern_Road05_1( 4, CenX + 80, CenY - 30, 60 );
		E_Pattern_Road05_1( 4, CenX - 80, CenY - 30, 60 );
	}

	FrameWait( 250 );
	//550
	if( !midboss_flg ){
		E_Pattern_Road05_7( 8, 0 );
	}
	FrameWait( 100 );
	//450
	if( !midboss_flg ){
		E_Pattern_Road05_7( 8, 1 );
		E_Pattern_Road05_2( 7, 280, CenX, MinY + 160, -1 );
	}
	FrameWait( 150 );
	//300
	if( !midboss_flg ){
		E_Pattern_Road05_7( 10, 0 );
	}
	FrameWait( 100 );
	//200
	if( !midboss_flg ){
		E_Pattern_Road05_7( 8, 1 );
	}
	FrameWait( 200 );
	
	//*/
	//---------------PhaseB--------------
	while( midboss_flg ){ yield; }

	E_Pattern_Road05_7( 8, 1 );

	FrameWait( 90 );
	CreateEnemy_Road05_6( [ MaxX+64, MinY+64 ], [ MaxX-64, MinY+128 ], [ CenX, MinY-256 ] );	
	E_Pattern_Road05_7( 8, 0 );

	FrameWait( 120 );
	CreateEnemy_Road05_6( [ MinX-64, MinY+64 ], [ MinX+64, MinY+128 ], [ CenX, MinY-256 ] );	
	E_Pattern_Road05_7( 12, 1 );

	FrameWait( 120 );
	E_Pattern_Road05_7( 12, 0 );

	FrameWait( 240 );

	E_Pattern_Road05_3( 14, 2 );
	FrameWait( 60 );
	E_Pattern_Road05_3( 14, 0 );

	FrameWait( 150 );

	CreateEnemy_Road05_4( [ MaxX, MinY-64 ], [ MaxX-64, CenY-128 ], [ MinX-256, CenY-96 ] );

	FrameWait( 210 );
	
	local{
		let lp = 45;
		let ag = -90;
		loop( lp ){
			let v = 200;
			let pos = [ CenX + v * cos( ag ), CenY + v * sin( ag ) ];
			let angle = ag + 90;
			CreateEnemy_Road05_8( pos, angle );
			ag -= 540 / lp;
			loop( 7 ){ yield; }
		}
	}
	FrameWait( 90 );
	
	CreateEnemy_Road05_4( [ MaxX, MinY-64 ], [ MaxX-96, CenY-128 ], [ MinX-256, CenY-96 ] );
	CreateEnemy_Road05_4( [ MinX, MinY-64 ], [ MinX+96, CenY-128 ], [ MaxX+256, CenY-96 ] );	

	FrameWait( 210 );
	local{
		let lp = 20;
		let ag = -90;
		loop( lp ){
			let v = 200;
			let pos = [ CenX + v * cos( ag ), CenY + v * sin( ag ) ];
			CreateEnemy_Road05_5( pos );
			ag += 360 / lp;
			loop( 13 ){ yield; }
		}
	}
	FrameWait( 180 );
	E_Pattern_Road05_2( 4, 90, CenX - 102, MaxY - 164, -1 );

	FrameWait( 90 );

	E_Pattern_Road05_2( 4, 90, CenX + 102, MinY + 164, 1 );

	FrameWait( 90 );

	E_Pattern_Road05_2( 4, 90, CenX + 102, MaxY - 164, 1 );

	FrameWait( 90 );

	E_Pattern_Road05_2( 4, 90, CenX - 102, MinY + 164, -1 );

	FrameWait( 150 );
	
	CreateEnemy_Road05_4( [ MinX, MinY-64 ], [ CenX, CenY-128 ], [ CenX, MinY-256 ] );

	FrameWait( 180 );

	E_Pattern_Road05_1( 9, CenX + 100, MinY + 72, 92 );
	FrameWait( 18 );
	E_Pattern_Road05_1( 9, CenX - 100, MinY + 72, 92 );

	FrameWait( 180 );
	
	E_Pattern_Road05_1( 9, CenX + 100, MinY + 72, 92 );
	FrameWait( 18 );
	E_Pattern_Road05_1( 9, CenX - 100, MinY + 72, 92 );

	FrameWait( 200 );
	CreateEnemy_Road05_6( [ MinX-64, MinY+64 ], [ MinX+64, MinY+128 ], [ CenX, MinY-256 ] );
	CreateEnemy_Road05_6( [ MaxX+64, MinY+64 ], [ MaxX-64, MinY+128 ], [ CenX, MinY-256 ] );
	FrameWait( 90 );
	
	E_Pattern_Road05_2( 6, 260, CenX, MaxY - 50, -1 );
	FrameWait( 120 );
	E_Pattern_Road05_2( 3, 160, CenX, MaxY - 270, 1 );
	FrameWait( 120 );
	E_Pattern_Road05_2( 4, 200, CenX, MaxY - 340, -1 );
	FrameWait( 120 );
	E_Pattern_Road05_2( 6, 300, CenX, MaxY - 410, 1 );
	
	FrameWait( 600 );
	
	//　ボス
	WaitForZeroEnemy();
	VanishAllEnemy();
	WaitForSpell();
	DeleteShotAll(TYPE_ALL, TYPE_ITEM);
	FrameWait(60);
	RegistBoss();
	FrameWait(120);
	WaitForZeroEnemy();
	FrameWait(120);
	
	//　ステージ背景変更奴の添え字初期化
	ActiveArray_Default( true );
	
	//----------------敵の作成--------------------------------
	task CreateEnemy_Road05_1( posD, posE ){
		//　タイプ　色　体力　無敵　レート　ドロップする点符量
		let enm_obj = CreateEnemy01_Soul( "BLUE", 8, 6, 100, 100, 7 );
		Road05_ShotPattern01A( enm_obj, BGW_AQUA_01 );
		Road05_ShotPattern01B( enm_obj, ADD_BGW_BLUE_21 );
		Obj_SetValue( enm_obj, "Collision_Player", 0 );
		OutDelete( enm_obj, [128,128] );
		CreateLiberationEffect03( posD, -6, [64,64,255] );
		CreateLiberationEffect03( posD, 6, [128,128,255] );
		ObjSound_Play( CreateShotSE[1] );
		ObjMove_SetPosition( enm_obj, posD[0], posD[1] );
		loop( 60 ){ yield; }
		ObjMove_SetDestAtWeight_Acceleration( enm_obj, posE, 16, 0, 0.01, 1.8 );
	}

	task CreateEnemy_Road05_2(posD){
		let enm_obj = CreateEnemy01_Onmyougyoku( "RED", 24, 0, 100, 100, 0, 20 );
		
		OutDelete( enm_obj, [128,128] );
		
		ObjMove_SetPosition( enm_obj, posD[0], posD[1] );
		Road05_ShotPattern02( enm_obj,BGW_BLUE_07 );
		loop( 300 ){ yield; }
		let speed = 0;
		let angle = GetAngleToPlayer( enm_obj );
		while( !Obj_IsDeleted( enm_obj ) ){
			ObjMove_SetSpeed( enm_obj, speed );
			ObjMove_SetAngle( enm_obj, angle );
			speed += 0.0125;
			yield;
		}
	}
	task CreateEnemy_Road05_3(posD,posM){
		let enm_obj = CreateEnemy01_Fairy( 1, 2, 3, 10, 100, 100, 3 );
		Road05_ShotPattern03( enm_obj, ADD_BGB_AQUA_04 );
		Obj_SetValue( enm_obj, "Collision_Player", 0 );
		
		OutDelete( enm_obj, [128,128] );
		
		ObjMove_SetPosition( enm_obj, posD[0], posD[1] );
		ObjMove_SetDestAtWeight_Acceleration( enm_obj, posM, 16, 1, 0.02, 4 );
	}

	task CreateEnemy_Road05_4( posD, posM, posE ){
		//　タイプ　色　体力　無敵　レート　ドロップする点符量
		let enm_obj = CreateEnemy01_Fairy( 6, 1, 112, 0, 100, 100, 144 );
		
		OutDelete( enm_obj, [128,128] );
		
		ObjMove_SetPosition( enm_obj, posD[0], posD[1] );
		ObjMove_SetDestAtWeight_Acceleration( enm_obj, posM, 8, 2, 0.02, 4 );
		Road05_ShotPattern04A( enm_obj, BGW_AQUA_01 );
		Road05_ShotPattern04B( enm_obj, BGW_PURPLE_01 );
		
		loop( 240 ){ yield; }
		ObjMove_SetDestAtWeight_Acceleration( enm_obj, posE, 16, 0, 0.01, 1.25 );
	}

	task CreateEnemy_Road05_5(posD){
		let enm_obj = CreateEnemy01_Onmyougyoku( "BLUE", 10, 0, 100, 100, 0, 26 );
		
		OutDelete( enm_obj, [128,128] );
		
		ObjMove_SetPosition( enm_obj, posD[0], posD[1] );
		Road05_ShotPattern05A( enm_obj,ADD_BGW_BLUE_27 );
		Road05_ShotPattern05B( enm_obj );
		loop( 190 ){ yield; }
		let speed = 0;
		let angle = GetAngleToPlayer( enm_obj );
		while( !Obj_IsDeleted( enm_obj ) ){
			ObjMove_SetSpeed( enm_obj, speed );
			ObjMove_SetAngle( enm_obj, angle );
			speed += 0.04;
			yield;
		}
	}

	task CreateEnemy_Road05_6( posD, posM, posE ){
		//　タイプ　色　体力　無敵　レート　ドロップする点符量
		let enm_obj = CreateEnemy01_Fairy( 6, 4, 112, 0, 100, 100, 166 );
		
		OutDelete( enm_obj, [128,128] );
		
		ObjMove_SetPosition( enm_obj, posD[0], posD[1] );
		ObjMove_SetDestAtWeight_Acceleration( enm_obj, posM, 8, 2, 0.02, 4 );
		Road05_ShotPattern06( enm_obj, BGW_PURPLE_18 );
		
		loop( 240 ){ yield; }
		ObjMove_SetDestAtWeight_Acceleration( enm_obj, posE, 16, 0, 0.01, 1.25 );
	}

	task CreateEnemy_Road05_7( posD, posM, posE ){
		//　タイプ　色　体力　無敵　レート　ドロップする点符量
		let enm_obj = CreateEnemy01_Fairy( 4, 2, 17, 0, 100, 100, 12 );
		Obj_SetValue( enm_obj, "Collision_Player", 0 );
		OutDelete( enm_obj, [128,128] );
		
		ObjMove_SetPosition( enm_obj, posD[0], posD[1] );
		ObjMove_SetDestAtWeight_Acceleration( enm_obj, posM, 8, 2, 0.02, 4 );
		Road05_ShotPattern07( enm_obj, BGB_BLUE_28 );
		
		loop( 150 ){ yield; }
		ObjMove_SetDestAtWeight_Acceleration( enm_obj, posE, 16, 0, 0.01, 1.25 );
	}

	task CreateEnemy_Road05_8( posD, angle ){
		let enm_obj = CreateEnemy01_Soul( "GREEN", 8, 6, 100, 100, 5 );
		Obj_SetValue( enm_obj, "Collision_Player", 0 );
		OutDelete( enm_obj, [128,128] );
		ObjSound_Play( CreateShotSE[1] );
		CreateLiberationEffect03( posD, -6, [64,255,64] );
		CreateLiberationEffect03( posD, 6, [128,255,128] );
		ObjMove_SetPosition( enm_obj, posD[0], posD[1] );
		Road05_ShotPattern08( enm_obj,BGB_BLUE_08 );
		loop( 30 ){ yield; }
		let speed = 0;
		while( !Obj_IsDeleted( enm_obj ) ){
			ObjMove_SetSpeed( enm_obj, speed );
			ObjMove_SetAngle( enm_obj, angle );
			speed += 0.02;
			angle += 0.9;
			yield;
		}
	}
	
	//　ユーティリティ
	task OutDelete(ID, dis ){
		let pos	= [ObjMove_GetX(ID),ObjMove_GetY(ID)];
		while(pos[0] < MaxX+dis[0] && pos[0] > MinX-dis[0] && pos[1] < MaxY+dis[1] && pos[1] > MinY-dis[1]){
			if( Obj_IsDeleted(ID) ){ break; }
			pos	= [ObjMove_GetX(ID),ObjMove_GetY(ID)];
			yield;
		}
		Obj_Delete(ID);
	}

	//　雑魚敵出現時の波紋
	//　System_Effectにある雑魚撃破えへくと関数をそのまま持ってきたもの
	task CreateLiberationEffect03(pos,angleZ,rgb_array){
		let ID		= ObjPrim_Create(OBJ_SPRITE_2D);
		let sca		= rand(0.6,1.2);
		let angle	= rand(0,360);
		let move1	= 0;
		let moveA	= 0;
		
		ObjRender_SetPosition(ID, pos[0], pos[1], 0 );
		ObjPrim_SetTexture(ID, effect_tex[0] );
		ObjRender_SetBlendType(ID, BLEND_ADD_ARGB );
		Obj_SetRenderPriorityI(ID, 33 );
		ObjRender_SetScaleXYZ(ID, move1*sca, move1*sca, 0 );
		ObjRender_SetColor(ID, rgb_array[0], rgb_array[1], rgb_array[2] );
		ObjSprite2D_SetSourceRect(ID, 0, 384, 128, 512 );
		ObjSprite2D_SetDestCenter(ID);
		
		while( move1 < 1 ){
			move1 = 1 * sin( moveA );
			
			ObjRender_SetScaleXYZ(ID, move1*sca, move1*sca, 0 );
			ObjRender_SetAlpha(ID, move1*255 );
			
			moveA += 10;
			
			yield;
		}
		move1 = 0;
		moveA = 0;
		while( move1 < 1 ){
			move1 = 1 * sin( moveA );
			
			ObjRender_SetScaleXYZ(ID, sca - move1*sca, sca + moveA/500, 0 );
			ObjRender_SetAngleXYZ(ID, 0, 0, angle );
			
			angle += angleZ;
			moveA += 2;
			
			yield;
		}
		Obj_Delete(ID);
	}
}

//　ステージ背景推移マネージャ
task Stage05_WorldManager(){
	let IsActive = GetAreaCommonData("StageTrance", "active", [true,true,true,true] );
	
	SetWorld05a();
	while( IsActive[0] ){
		IsActive = GetAreaCommonData("StageTrance", "active", [true,true,true,true] );
		yield;
	}
	SetWorld05b();
}