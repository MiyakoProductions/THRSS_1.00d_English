////#東方弾幕風
#ScriptVersion[3]
#Title["桃源宮　stage3　瑠璃退場"]
#Text[""]
#System["script/Th_rss/system/System_Main.dnh"]
#Image[""]
#Background[""]
	
	//　ライブラリ管理ファイル
	#include "./../lib_Control.dnh"
	#include "./lib_enm03_setting.dnh"
	#include "./lib_IceShot.dnh"
	
	let enm;
	let spl;
	
	//　制限時間
	let SET_TIMER	= 60;
	
	@Initialize{
		//　ボス生成
		enm	= ObjEnemy_Create(OBJ_ENEMY_BOSS);
		ObjEnemy_SetDamageRate(enm, 0, 0 );
		ObjEnemy_Regist(enm);
		
		//　初期化
		EnemyInitialize(enm);
		
		//　体力0まで待機
		EndEnemy(enm);
		
		//　敵ダメージレート 第2引数:ボムバリア
		SetDamageRate(enm, 100, false );
		ShotScore(enm);
		
		//　削除上限
		SetShotAutoDeleteClip(128,128,128,128);
		
		//　メイン
		Main( enm );
	}
	
	@Loading{
		//　弾データ読み込み　ALPHAとADD
		//LoadEnemyShotData( csd ~ "./../../lib/lib_bullet_data.dnh" );
		//LoadEnemyShotData( csd ~ "./../../lib/lib_bullet_data_ADD.dnh" );
	}
	
	@MainLoop{
		yield;
	}
	
	@Event{
		alternative( GetEventType() )
		case( EV_REQUEST_LIFE ){
			//　ライフ一律1000
			SetScriptResult( 1000 );
		}
		case( EV_REQUEST_TIMER ){
			//　制限時間
			SetScriptResult( SET_TIMER );
		}
		case( EV_REQUEST_SPELL_SCORE ){
			//　スペルカードボーナス
			SetScriptResult( SET_SCORE );
		}
	}
	
	@Finalize{ }
	
	//----------------------------------------------------------------------------------------------------
	//----------------------------------------------------------------------------------------------------
	//　task色々
	
	task EnemyInitialize(ID){
		//　アニメーション用共通データ作成
		CreateCommonDataArea("anime");
		SetAreaCommonData("anime","spa",false);
		
		//　60角形　距離64　優先71　遅延120.f　色[紫]　スペル用　[外枠出現処理ON,本体出現処理ON]
		//　"Default" or "Normal" or "SpellCard"
		//CreateLifeBar(ID, 60, 64, 71, 0, [255,255,255], "Normal" , [false,false] );
		//　type　delay
		//　0:戦闘開始　1:戦闘継続
		//RedMagicCircle( 1, 0 );
		Aura(ID, 8, aura_rgb[0], aura_rgb[1] );
		//　親ID　表示遅延　bool 移動効果　char 移動効果種別　bool フェードイン
		//　"BeginSpellCard" or "EndSpellCard"
		//SetDrawTimer(enm, 0, true, "EndSpellCard", false );
		//　画像パスだけ変えればいいんじゃないかな
		EnemyDisplay02(enm, true, enemy_tex_path );
		ObjMove_SetDestAtWeight(enm, CenX, CenY-96, 8, 8 );
	}
	
	function wait( long ){
		loop( long ){ yield; }
	}
	
	//　メイン
	task Main( ID ){
		let gpos	= [ ObjMove_GetX(ID), ObjMove_GetY(ID) ];
		let frame	= 0;
		
		let move1	= 0;
		let moveA	= 0;
		
		loop( 48 ){
			CreateLiberationEffect01_Boss( gpos, rand(2,12), -0.1, 0.8, rand(1,1.6), [255,255,255] );
		}
		
		ObjSound_Play( UtilitySE[6] );
		
		while( !Obj_IsDeleted( ID ) && frame < 180 ){
			gpos = [ ObjMove_GetX(ID), ObjMove_GetY(ID) ];
			
			move1 = 1 * sin( moveA );
			
			if( frame > 0 && frame < 30 && frame%2 == 0 ){
				loop( 2 ){
					CreateLiberationEffect01_Boss( gpos, rand(4,8), rand(0,0.1), 10, rand(0.2,0.5), [255,255,255] );
				}
				loop( 2 ){
					CreateLiberationEffect02_Boss( gpos, rand(4,8), -0.1, 0.4, [128,192,255] );
				}
			}
			
			if( frame == 120 ){
				ObjMove_SetDestAtWeight( ID, MinX-128, MinY-128, 32, move1*8 );
			}
			
			frame++;
			if( move1 < 1 ){ moveA += 1; }
			
			yield;
		}
		ObjEnemy_SetLife( ID, 0 );
	}
	